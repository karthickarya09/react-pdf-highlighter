{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["process","Buffer","global","root","factory","module","exports","self","modules","__w_pdfjs_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","warn","msg","verbosity","VerbosityLevel","WARNINGS","console","log","unreachable","Error","assert","cond","stringToBytes","str","length","bytes","Uint8Array","charCodeAt","arrayByteLength","arr","undefined","byteLength","createPromiseCapability","capability","promise","Promise","resolve","reject","resolveCall","fn","args","thisArg","arguments","apply","wrapReason","reason","_typeof","AbortException","message","MissingPDFException","UnexpectedResponseException","status","UnknownErrorException","details","resolveOrReject","success","MessageHandler","sourceName","targetName","comObj","_this","this","callbackId","streamId","postMessageTransfers","streamSinks","create","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","data","stream","_processStreamMessage","isReply","callback","error","action","_sourceName","_targetName","then","result","postMessage","toString","makeReasonSerializable","_createStreamSink","addEventListener","value","utf8StringToString","stringToUTF8String","stringToPDFString","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","readInt8","log2","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","getInheritableProperty","deprecated","createObjectURL","createBlob","bytesToString","arraysToBytes","FormatError","XRefParseException","Util","TextRenderingMode","StreamType","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingDataException","InvalidPDFException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","Symbol","iterator","obj","constructor","_streams_polyfill","ERRORS","INFOS","code","begin","end","NullCharactersRegExp","rgbBuf","makeCssRgb","r","g","b","join","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","Math","min","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","Number","isInteger","pos","romanBuf","push","romanStr","toLowerCase","appendToArray","arr1","arr2","Array","prependToArray","unshift","extendObj","obj1","obj2","key","inherit","sub","base","prop","loadScript","src","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","convertToViewportPoint","x","y","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","contentType","Blob","type","digits","URL","blob","buffer","ii","b1","b2","b3","on","actionName","handler","scope","send","transfers","sendWithPromise","e","sendWithStream","queueingStrategy","_this2","start","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref2","chunk","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref3","deleteStreamController","all","map","catch","finalize","destroy","removeEventListener","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","item","itemLength","resultLength","set","String","fromCharCode","strBuf","chunkEnd","subarray","_ref","dict","_ref$getArray","getArray","_ref$stopWhenFound","stopWhenFound","loopCount","values","initializer","lookup","ch","baseUrl","otherUrl","origin","other","url","absoluteUrl","protocol","isValidProtocol","ex","buffer8","Uint32Array","Function","ceil","offset","replace","level","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","isName","Name","isDict","Dict","isRef","Ref","EOF","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","xref","_map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isArray","fetch","getRaw","getKeys","keys","has","forEach","empty","merge","dictArray","mergedDict","keyName","num","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","store","uid","_Symbol","USE_SYMBOL","it","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","maybeMinBufferLength","bufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","maybeLength","cmf","flg","codeSize","codeBuf","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","firstDigit","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","core","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","target","S","expProto","U","W","R","window","__g","version","__e","isObject","TypeError","SRC","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","that","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","getRgb","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","resizeRgbImage","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","resCS","mode","altIR","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","XYZ_Flat","tempConvertMatrix2","sourceWhitePoint","XYZ_In","LMS","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","convertToFlat","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","id","px","random","concat","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","index","next","done","computeAdler32","bytesLength","MAX_ADLER32_LENGTH","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","knownCommands","toHexDigit","specialChars","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj3","hints","hintsLength","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","isNaN","ARG","T","tryGet","callee","shared","Constructor","forbiddenField","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","forceDataSchema","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","InitialState","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","img","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","iFirstPIMXO","arg","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","firstPIXOArg0","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","addDependencies","addOpList","opList","lastChunk","cached","getTransfers","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","SHARED","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","ONREADYSTATECHANGE","run","listener","nextTick","now","port2","port1","onmessage","importScripts","removeChild","setTimeout","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","from","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","read","readChunk","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_arr","_n","_d","_e","_s","_i","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","getPageDict","createPage","nodesToVisit","currentNode","pop","currentPageIndex","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","indexOf","addDefaultProtocolToUrl","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","jsUrl","RegExp","tryConvertUrlEncoding","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","readToken","token","LF","CR","LT","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","options","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","bp","dataEnd","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","failOnCorruptedImage","getBlocksDimensions","component","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","tile","componentsCount","components","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","siz","SIZ","tileIndex","currentTile","tiles","Csiz","blocksDimensions","tcx0","tcy0","tcx1","tcy1","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","x0","y0","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","zeroBitPlanes","dataItem","codingpasses","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","SubbandsGainLog2","calculate","top","LL","LH","HL","HH","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","Xsiz","Ysiz","XOsiz","YOsiz","doNotRecover","sqcd","spqcdSize","mainHeader","XTsiz","YTsiz","XTOsiz","YTOsiz","isSigned","XRsiz","YRsiz","x1","y1","calculateComponentDimensions","numXtiles","numYtiles","tx0","ty0","tx1","ty1","tileComponent","calculateTileGrids","QCC","COC","qcd","noQuantization","spqcd","QCD","qcc","cqcc","cod","scod","sopMarkerUsed","ephMarkerUsed","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","COD","partIndex","partsCount","qcdOrQcc","initializeTile","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","codingpassesLog2","codedDataLength","packetItem","parseTilePackets","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","instance","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","props","descriptor","protoProps","staticProps","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","prepareKeyData","revision","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","file","properties","seacAnalysisEnabled","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","fontBBox","ascent","descent","ascentScaled","charset","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","parseFloat","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","isRTLRangeFor","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node2","default","_interopRequireDefault","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","startWorkerTask","task","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","docId","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","cancelXHRs","pdfFile","flushChunks","apiVersion","workerHandlerName","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","getOperatorList","renderInteractiveForms","featureId","wrappedException","minimumStackMessage","sink","extractTextContent","normalizeWhitespace","combineTextItems","waitOn","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","maybePort","isMessagePort","globalScope","_pdfjsCompatibilityChecked","isNodeJS","hasDOM","btoa","atob","scripts","Element","parentNode","WeakMap","isRelativeScheme","scheme","relative","invalid","_isInvalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","errors","cursor","seenAt","seenBracket","loop","ALPHA","ALPHANUMERIC","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","_password","nextC","nextNextC","cp","tempC","temp","relativePathDotMapping","JURL","_url","hasWorkingUrl","pathname","authority","host","hostname","search","_","OriginalURL","revokeObjectURL","searchString","isRegExp","MATCH","re","$includes","LN2","isFinite","$at","iterated","point","TO_STRING","dPs","IE_PROTO","Empty","_createDict","iframeDocument","iframe","display","contentWindow","open","write","lt","Properties","arrayIndexOf","ObjectProto","addToUnscopables","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","exited","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","remaining","$index","alreadyCalled","race","ret","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","navigator","standalone","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","onFinally","try","InternalMap","each","weak","fails","validate","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","buggy","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","_typeof2","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","Infinity","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","RangeError","ValidateAndNormalizeQueuingStrategy","AssertionError","rethrowAssertionErrorRejection","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","IsWritableStream","IsWritableStreamLocked","_writer","WritableStreamAbort","_state","_storedError","_pendingAbortRequest","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","_writableStreamController","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","_writeRequests","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_inFlightCloseRequest","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","_closeRequest","_inFlightWriteRequest","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","IsWritableStreamDefaultWriter","WritableStreamDefaultWriterClose","_ownerWritableStream","closeRequest","EnqueueValueWithSize","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultWriterRelease","releasedError","WritableStreamDefaultWriterWrite","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","defaultWriterLockException","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","WritableStreamDefaultControllerGetDesiredSize","_strategyHWM","_queueTotalSize","_queue","PeekQueueValue","WritableStreamMarkCloseRequestInFlight","DequeueValue","_underlyingSink","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","WritableStreamDefaultControllerError","streamBrandCheckException","defaultWriterBrandCheckException","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterReadyPromiseInitializeAsResolved","_require","_require2","_require3","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","WritableStreamDefaultController","__startSteps","WritableStreamDefaultWriterCloseWithErrorPropagation","defaultWriterReadyPromiseInitialize","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterGetDesiredSize","normalizedStrategy","IsWritableStreamDefaultController","startResult","container","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","IsReadableStream","IsReadableStreamLocked","ReadableStreamTee","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultReaderRead","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","compositeReason","cancelResult","ReadableStreamCancel","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","_readableStreamController","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","_disturbed","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamReaderGenericInitialize","_ownerReadableStream","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","ReadableStreamReaderGenericCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseResetToRejected","ReadableStreamBYOBReaderRead","_controlledReadableStream","elementSize","DataView","BYTES_PER_ELEMENT","ctor","pullIntoDescriptor","byteOffset","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","__pullSteps","IsReadableStreamDefaultController","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerShouldCallPull","_pulling","_pullAgain","_underlyingSource","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableByteStreamController","IsReadableStreamBYOBRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","_byobRequest","_associatedReadableByteStreamController","_view","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInternal","bytesWritten","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","remainderSize","ReadableByteStreamControllerRespondInReadableState","readerLockException","defaultReaderBrandCheckException","byobReaderBrandCheckException","defaultControllerBrandCheckException","byobRequestBrandCheckException","byteStreamControllerBrandCheckException","_require4","_require5","underlyingSource","ReadableByteStreamController","ReadableStreamDefaultController","ReadableStreamBYOBReader","AcquireReadableStreamBYOBReader","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","pipeLoop","waitForWritesToFinish","oldCurrentWrite","isOrBecomesErrored","shutdownWithAction","originalIsError","originalError","doTheRest","newError","shutdown","isError","isOrBecomesClosed","destClosed","branches","IsReadableStreamDisturbed","ArrayBuffer","isView","pendingPromise","ReadableStreamBYOBRequest","ReadableByteStreamControllerRespond","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","autoAllocateChunkSize","_autoAllocateChunkSize","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueue","viewE","bufferE","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","LETTER_SIZE_MEDIABOX","_getInheritableProperty","resources","mediaBox","cropBox","intersection","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","prev","getContexts","decodeIAID","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","tableB1","symbolWidths","getStandardTable","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","bitmapSize","tableBitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","symbolBitmap","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","standardTablesCache","currentByte","getCustomHuffmanTable","customTables","endOfBlock","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customIndex","tableAggregateInstances","getSymbolDictionaryHuffmanTables","referredSymbols","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","numBits","parseJbig2Chunks","JpegError","DNLMarkerError","scanLines","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","parseDNLMarker","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","offsetZ","successiveACState","successiveACNextValue","decodeMcu","mcu","mcuCol","mcusPerLine","decodeBlock","decodeFn","progressive","startOffset","componentsLength","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSin6","dctCos6","dctSqrt1d2","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","_ref$dnlScanLines","dnlScanLines","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","maxY","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","DefaultPartialEvaluatorOptions","fetchBuiltInCMap","cachedCMap","compressionType","TimeSlotManager","canDecode","image","isDecodable","colorSpace","isSupported","checked","endTime","deferred","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translatedPromise","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","closePendingRestoreOPS","preprocessor","savedStatesDepth","_ref5$initialState","EvalState","xobjs","StateManager","EvaluatorPreprocessor","timeSlotManager","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","ensureTextContentItem","textContentItem","textState","seenStyles","textContent","styles","fontFamily","fallbackName","vertical","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","spaceWidth","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","WhitespaceRegexp","replaceWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","TextState","skipEmptyXObjs","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cMapPromise","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","opMap","getOPMap","nonProcessedArgs","numArgs","variableArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","MAX_NUM_SIZE","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","adjustWidths","recoverGlyphName","type1FontGlyphMapping","builtInEncoding","glyphNames","glyphId","charCodeToGlyphId","standardGlyphName","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","ID","FontRendererFactory","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","readTables","previousPosition","readTableEntry","VALID_TABLES","readOpenTypeHeader","ttf","entrySelector","readTrueTypeCollectionData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","readNameTable","nameEntry","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","writeSignedInt16","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","numRecords","stringsStart","records","platform","language","record","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","foldTTTable","hasGlyph","isTrueTypeCollectionFile","ttcData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","int32","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","readPostScriptTable","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","getCharCodes","charCodes","createCharCode","adjustToUnicode","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","getHeaderBlock","Type1Parser","extractFontHeader","eexecBlock","eexecBytes","getEexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","bezierCurveTo","xb","yb","subrCode","stackClean","stems","numSubrs","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","compileGlyph","compileGlyphImpl","parseGlyfTable","Type1CharString","lsb","flexing","COMMAND_MAP","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","EEXEC_ENCRYPT_KEY","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","buildFigureFromPatch","mesh","figure","figures","coords","pi","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","getB","bCol","newColor","updateBounds","bitsPerCoordinate","bitsPerFlag","patchMesh","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xi","yi","lut","t_","buildB","xstep","ystep","paintType","tilingType","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","baseTypes","arabicTypes","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","MASK_HIGH","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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ACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACA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CAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aAEA0rD,GAAA,EAAAjvD,EAAA7f,uBAAA,SAAAojB,GACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WAEAyrD,GAAA,EAAAhvD,EAAA7f,uBAAA,SAAAojB,GACAA,EAAA,MACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WAEAvrB,EAAAs3E,gBACAt3E,EAAAq3E,mBACAr3E,EAAAo3E,gBACAp3E,EAAAm3E,kBACAn3E,EAAAk3E,8BACAl3E,EAAAi3E,uCACAj3E,EAAAg3E,qCAIA,SAAAj3E,EAAAC,EAAAG,GAEA,aAGA,IAAAgI,EAAAhI,EAAA,GAAAgI,sBACAovE,EAAApvE,EAAA,SAAAojB,GACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,cAuCAisD,IACA/sE,MAAA,EACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,OACAC,IAAA,SAEAD,MAAA,OACAC,IAAA,SAEAD,MAAA,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EAAA2b,EAAAjgB,QAAAiD,GACAyhE,EAAA7+D,KAAAvB,GAAArB,GAEAyhE,EAAA7+D,KAAAvB,EAAArB,GAEA,MACA,WACAqB,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAA4xE,KAAApxE,IACA,MACA,eACArB,EAAAyhE,EAAArsB,OACA/zC,EAAAogE,EAAArsB,OACA,EACAqsB,EAAA7+D,KAAAvB,GAAArB,GAEAyhE,EAAA7+D,KAAAvB,GAAArB,GAEA,MACA,cACAqB,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAAgX,KAAAxW,IACA,MACA,WACAA,EAAAogE,EAAArsB,MACAqsB,EAAA4Q,KAAAhxE,GACA,MACA,UACAA,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAA6xE,IAAArxE,IACA,MACA,UACAA,EAAA,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,GACA,MACA,UACA,MACA,UACArB,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,EAAArB,GACA,MACA,UACAyhE,EAAA4Q,KAAA,GACA,MACA,SACAryE,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,IAAArB,GACA,MACA,WACAyhE,EAAA6Q,KAAA,KACA,MACA,UACAtyE,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAA2tB,IAAAntB,EAAArB,IACA,MACA,YACAyhE,EAAA7+D,MAAA,GACA,MACA,YACAvB,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAA4pB,MAAAppB,IACA,MACA,SACArB,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,GAAArB,GACA,MACA,SACAA,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,EAAArB,GACA,MACA,WACAA,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,EAAArB,EAAA,GACA,MACA,YACAqB,EAAAogE,EAAArsB,MACAqsB,EAAAxsC,MAAA5zB,GACA,MACA,SACArB,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,GAAArB,GACA,MACA,SACAqB,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAA3J,IAAAmK,IACA,MACA,UACAA,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAA3J,IAAAmK,GAAAR,KAAA8xE,MACA,MACA,SACA3yE,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,EAAArB,GACA,MACA,UACAA,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,EAAArB,GACA,MACA,UACAA,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,EAAArB,GACA,MACA,SACAA,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAAvB,IAAArB,GACA,MACA,UACAqB,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,MAAAvB,GACA,MACA,UACAA,EAAAogE,EAAArsB,OACA,EAAAp4B,EAAAjgB,QAAAsE,GACAogE,EAAA7+D,MAAAvB,GAEAogE,EAAA7+D,MAAAvB,GAEA,MACA,SACArB,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,OACA,EAAAp4B,EAAAjgB,QAAAsE,KAAA,EAAA2b,EAAAjgB,QAAAiD,GACAyhE,EAAA7+D,KAAAvB,GAAArB,GAEAyhE,EAAA7+D,KAAAvB,EAAArB,GAEA,MACA,UACAyhE,EAAArsB,MACA,MACA,WACAp1C,EAAAyhE,EAAArsB,MACA/zC,EAAAogE,EAAArsB,MACAqsB,EAAA6Q,KAAAjxE,EAAArB,GACA,MACA,YACAqB,EAAAogE,EAAArsB,MACAqsB,EAAA7+D,KAAA/B,KAAAu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","file":"0.6aa34e4c.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.getInheritableProperty = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(75);\n\nvar _streams_polyfill = __w_pdfjs_require__(130);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getInheritableProperty(_ref) {\n  var dict = _ref.dict,\n      key = _ref.key,\n      _ref$getArray = _ref.getArray,\n      getArray = _ref$getArray === undefined ? false : _ref$getArray,\n      _ref$stopWhenFound = _ref.stopWhenFound,\n      stopWhenFound = _ref$stopWhenFound === undefined ? true : _ref$stopWhenFound;\n\n  var LOOP_LIMIT = 100;\n  var loopCount = 0;\n  var values = void 0;\n  while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    if (++loopCount > LOOP_LIMIT) {\n      warn('getInheritableProperty: maximum loop count exceeded for \"' + key + '\"');\n      break;\n    }\n    dict = dict.get('Parent');\n  }\n  return values;\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref2) {\n      var stream = _ref2.stream,\n          chunk = _ref2.chunk,\n          transfers = _ref2.transfers,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref3) {\n      var stream = _ref3.stream,\n          success = _ref3.success,\n          reason = _ref3.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VerbosityLevel = VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getInheritableProperty = getInheritableProperty;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(47)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(6).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(9);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(10);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(30);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(98);\nvar enumBugKeys = __w_pdfjs_require__(53);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(16).f;\nvar has = __w_pdfjs_require__(10);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(103);\nvar isArrayIter = __w_pdfjs_require__(104);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(105);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(134);\n\nvar _jbig2_stream = __w_pdfjs_require__(135);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(138);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(6).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(47)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(9);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(10);\nvar setDesc = __w_pdfjs_require__(16).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(137);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(28)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(84);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(2)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar test = {};\ntest[__w_pdfjs_require__(2)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(9)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(95);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar getPrototypeOf = __w_pdfjs_require__(99);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(6).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(100);\nvar getKeys = __w_pdfjs_require__(24);\nvar redefine = __w_pdfjs_require__(9);\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(2);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(17);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(106);\nvar html = __w_pdfjs_require__(54);\nvar cel = __w_pdfjs_require__(28);\nvar global = __w_pdfjs_require__(6);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(15)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(30);\nvar toObject = __w_pdfjs_require__(35);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(113);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(143);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(149);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(132);\n\nvar _is_node = __w_pdfjs_require__(44);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar globalScope = __w_pdfjs_require__(76);\nif (!globalScope._pdfjsCompatibilityChecked) {\n  globalScope._pdfjsCompatibilityChecked = true;\n  var isNodeJS = __w_pdfjs_require__(44);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(77);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(82);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(85);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(87);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(89);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(92);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(111);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(127);\n  })();\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(78);\nmodule.exports = __w_pdfjs_require__(7).String.includes;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar context = __w_pdfjs_require__(79);\nvar INCLUDES = 'includes';\n$export($export.P + $export.F * __w_pdfjs_require__(81)(INCLUDES), 'String', {\n  includes: function includes(searchString) {\n    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isRegExp = __w_pdfjs_require__(80);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar cof = __w_pdfjs_require__(15);\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) {}\n  }\n  return true;\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $includes = __w_pdfjs_require__(48)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(49)('includes');\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(86);\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(90);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(91) });\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(93);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(102);\n__w_pdfjs_require__(109);\n__w_pdfjs_require__(110);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(94)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(96);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(2)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(97);\nvar enumBugKeys = __w_pdfjs_require__(53);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(28)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(24);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toIObject = __w_pdfjs_require__(18);\nvar arrayIndexOf = __w_pdfjs_require__(48)(false);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toObject = __w_pdfjs_require__(35);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(49);\nvar step = __w_pdfjs_require__(101);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(18);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(6);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(33);\nvar $export = __w_pdfjs_require__(5);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(17);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar task = __w_pdfjs_require__(57).set;\nvar microtask = __w_pdfjs_require__(107)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\nvar promiseResolve = __w_pdfjs_require__(59);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(2)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(25)($Promise, PROMISE);\n__w_pdfjs_require__(108)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar macrotask = __w_pdfjs_require__(57).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(15)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar dP = __w_pdfjs_require__(16);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(6);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar promiseResolve = __w_pdfjs_require__(59);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(112);\n__w_pdfjs_require__(123);\n__w_pdfjs_require__(125);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(61)(0);\nvar redefine = __w_pdfjs_require__(9);\nvar meta = __w_pdfjs_require__(39);\nvar assign = __w_pdfjs_require__(116);\nvar weak = __w_pdfjs_require__(118);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(62);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(119)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(114);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(115);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar gOPS = __w_pdfjs_require__(117);\nvar pIE = __w_pdfjs_require__(40);\nvar toObject = __w_pdfjs_require__(35);\nvar IObject = __w_pdfjs_require__(30);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(38);\nvar getWeak = __w_pdfjs_require__(39).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar createArrayMethod = __w_pdfjs_require__(61);\nvar $has = __w_pdfjs_require__(10);\nvar validate = __w_pdfjs_require__(62);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar redefineAll = __w_pdfjs_require__(38);\nvar meta = __w_pdfjs_require__(39);\nvar forOf = __w_pdfjs_require__(26);\nvar anInstance = __w_pdfjs_require__(36);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(60);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar inheritIfRequired = __w_pdfjs_require__(120);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(121).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(122).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(40);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(18);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar has = __w_pdfjs_require__(10);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(124)('WeakMap');\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(126)('WeakMap');\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar aFunction = __w_pdfjs_require__(17);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(26);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(128);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $values = __w_pdfjs_require__(129)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar toIObject = __w_pdfjs_require__(18);\nvar isEnum = __w_pdfjs_require__(40).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(131).ReadableStream;\n}\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _document = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _annotation = __w_pdfjs_require__(139);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jbig = __w_pdfjs_require__(136);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(141);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(142);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _pattern = __w_pdfjs_require__(146);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _bidi = __w_pdfjs_require__(147);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(148);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(150);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(151);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _font_renderer = __w_pdfjs_require__(144);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _type1_parser = __w_pdfjs_require__(145);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module id = wk5V\n// module chunks = 0"],"sourceRoot":""}